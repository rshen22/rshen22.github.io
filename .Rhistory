library(tigris)
usa_zips <-
zctas(cb = T, progress_bar = F)
bay_zips <-
usa_zips %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(usa_zips %>% select(GEOID10)) %>%
st_as_sf()
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
usa_zips <-
zctas(cb = T, progress_bar = F)
bay_zips <-
usa_zips %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(usa_zips %>% select(GEOID10)) %>%
st_as_sf()
saveRDS(bay_zips, "bay_zips.rds")
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
getwd()
setwd("/Users/rexshen/Documents/Github/rshen22.github.io")
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
library(tigris)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == 2020
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = "Residential Energy Consumption in the Bay Area, 2020",
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
selectInput(
inputId = "year",
label = "Year:",
choices = c(2017,2018,2019,2020),
selected = 2020
)
library(shint)
library(shiny)
selectInput(
inputId = "year",
label = "Year:",
choices = c(2017,2018,2019,2020),
selected = 2020
)
plotlyOutput("plot")
observeEvent(input$year, {
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == input$year
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
color = "Year"
) +
theme(legend.position = "none")
output$plot <- renderPlotly({
chart %>%
ggplotly() %>%
config(displayModeBar = F)
})
})
leafletOutput("map")
observeEvent(input$year, {
pge_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS == "Elec- Residential",
YEAR == input$year
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_res_elec$TOTALKBTU
)
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = paste0("Total Residential<br>Electricity (kBTU), ", input$year)
)
})
})
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == input$year
)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
# checkboxGroupInput(
#  inputId = "year",
#  label = "Year(s):",
#  choices = c(2017, 2018, 2019, 2020))
selectInput(
inputId = "year",
label = "Year:",
choices = c(2017,2018,2019,2020),
selected = 2020
)
plotlyOutput("plot")
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == input$year
)
observeEvent(input$year, {
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == input$year
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
color = "Year"
) +
theme(legend.position = "none")
output$plot <- renderPlotly({
chart %>%
ggplotly() %>%
config(displayModeBar = F)
})
})
View(chart)
View(chart)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
YEAR == input$year
)
Hi = 2017
Hi = as.character(Hi)
Hi
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
browsable(
tagList(
list(
tags$head(
tags$style(
".leaflet .legend {
line-height: 30px;
font-size: 30px;
}",
".leaflet .legend i{
width: 30px;
height: 30px;
}"
)
),
leaf)))
getwd()
install.packages("terra")
library(terra)
library(terra)
install.packages("terra", dependencies = TRUE)
library(terra)
install.packages("terra")
library(terra)
